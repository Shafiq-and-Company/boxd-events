/* Up Next Card Container */
.upNextCard {
  background: #ffffff;
  border: 1px solid #000000;
  box-shadow: 2px 2px 0px 0px #000000;
  border-radius: 0;
  padding: 24px;
  margin-bottom: 0;
  height: calc((100vh - 72px - 40px - 20px - 20px) / 2 - 20px);
  width: 100%;
  max-width: 400px;
  display: flex;
  flex-direction: column;
}

/* Card Header */
.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 16px;
  border-bottom: 1px solid #e5e7eb;
}

.cardTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: #1f2937;
  margin: 0;
}

.roundInfo {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 4px;
}

.roundName {
  font-size: 0.875rem;
  font-weight: 500;
  color: #374151;
}

.roundNumber {
  font-size: 0.75rem;
  color: #6b7280;
  background: #f3f4f6;
  padding: 2px 6px;
  border-radius: 4px;
}

/* Matches List */
.matchesList {
  display: flex;
  flex-direction: column;
  gap: 12px;
  flex: 1;
  overflow-y: auto;
  padding-right: 8px;
}

.matchItem {
  background: #f9fafb;
  border: 1px solid #e5e7eb;
  border-radius: 0;
  padding: 12px;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  flex-shrink: 0;
}

.matchItem:hover {
  border-color: #000000;
  box-shadow: 1px 1px 0px 0px #000000;
  cursor: pointer;
}

.matchItem.inProgress {
  border-color: #f59e0b;
  background: #fef3c7;
}

.matchItem.inProgress:hover {
  border-color: #d97706;
  box-shadow: 1px 1px 0px 0px #d97706;
}


/* Match Players */
.matchPlayers {
  display: flex;
  align-items: center;
  gap: 12px;
}

.player {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;
}

.playerName {
  font-size: 0.875rem;
  font-weight: 500;
  color: #374151;
  text-align: center;
}

.playerScore {
  font-size: 0.75rem;
  font-weight: 600;
  color: #059669;
  background: #d1fae5;
  padding: 2px 6px;
  border-radius: 4px;
  margin-top: 4px;
}

.vs {
  font-size: 0.75rem;
  font-weight: 600;
  color: #9ca3af;
  background: #f3f4f6;
  padding: 4px 8px;
  border-radius: 4px;
  border: 1px solid #d1d5db;
}

.matchStatus {
  font-size: 0.75rem;
  font-weight: 500;
  color: #6b7280;
  text-align: center;
  margin-top: 8px;
  padding: 2px 8px;
  background: #f3f4f6;
  border-radius: 4px;
  display: inline-block;
}

/* Empty State */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  text-align: center;
  width: 100%;
}

.emptyIcon {
  color: #9ca3af;
  margin-bottom: 16px;
}

.emptyTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: #374151;
  margin: 0 0 8px 0;
}

.emptyDescription {
  font-size: 1rem;
  color: #6b7280;
  margin: 0;
  max-width: 300px;
  line-height: 1.5;
}

/* Loading State */
.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  text-align: center;
}

.loadingSpinner {
  width: 32px;
  height: 32px;
  border: 3px solid #f3f4f6;
  border-top: 3px solid #000000;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 16px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Match Modal */
.matchModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modalContent {
  background: #ffffff;
  border: 1px solid #000000;
  box-shadow: 4px 4px 0px 0px #000000;
  border-radius: 0;
  padding: 24px;
  max-width: 500px;
  width: 90%;
  max-height: 80vh;
  overflow-y: auto;
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 16px;
  border-bottom: 1px solid #e5e7eb;
}

.modalHeader h3 {
  font-size: 1.25rem;
  font-weight: 600;
  color: #1f2937;
  margin: 0;
}

.closeButton {
  background: none;
  border: none;
  font-size: 1.5rem;
  color: #6b7280;
  cursor: pointer;
  padding: 4px;
  line-height: 1;
}

.closeButton:hover {
  color: #374151;
}

.matchInfo {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 24px;
}

.playerInfo {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  gap: 8px;
}

.scoreInput {
  width: 80px;
  padding: 8px 12px;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  text-align: center;
  font-size: 1rem;
  font-weight: 600;
}

.scoreInput:focus {
  outline: none;
  border-color: #000000;
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
}

.scoreInput:disabled {
  background: #f9fafb;
  color: #9ca3af;
  cursor: not-allowed;
}

.modalActions {
  display: flex;
  justify-content: center;
  gap: 12px;
}

.startButton,
.updateButton {
  background: #000000;
  color: #ffffff;
  border: 1px solid #000000;
  padding: 12px 24px;
  border-radius: 0;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.startButton:hover,
.updateButton:hover {
  background: #374151;
  border-color: #374151;
}

.startButton:disabled,
.updateButton:disabled {
  background: #9ca3af;
  border-color: #9ca3af;
  cursor: not-allowed;
}

/* Scrollbar Styling */
.matchesList::-webkit-scrollbar {
  width: 6px;
}

.matchesList::-webkit-scrollbar-track {
  background: #f1f5f9;
}

.matchesList::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 3px;
}

.matchesList::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

/* Responsive Design */
@media (max-width: 768px) {
  .upNextCard {
    padding: 16px;
    margin-bottom: 16px;
    max-width: 100%;
  }
  
  .cardHeader {
    flex-direction: column;
    gap: 12px;
    align-items: flex-start;
  }
  
  .roundInfo {
    align-items: flex-start;
  }
  
  .matchItem {
    padding: 10px;
  }
  
  .matchPlayers {
    gap: 8px;
  }
  
  .playerName {
    font-size: 0.8rem;
  }
}

@media (max-width: 480px) {
  .upNextCard {
    padding: 12px;
  }
  
  .cardTitle {
    font-size: 1.125rem;
  }
  
  .matchItem {
    padding: 8px;
  }
  
  
  .matchPlayers {
    flex-direction: column;
    gap: 6px;
  }
  
  .vs {
    align-self: center;
  }
}
